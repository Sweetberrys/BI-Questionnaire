{"ast":null,"code":"export default {\n  name: \"Question\",\n  data() {\n    return {\n      tableData: [],\n      // 所有的数据\n      pageNum: 1,\n      // 当前的页码\n      pageSize: 10,\n      // 每页显示的个数\n      total: 0,\n      name: null,\n      fromVisible: false,\n      form: {},\n      user: JSON.parse(localStorage.getItem('xm-user') || '{}'),\n      rules: {\n        name: [{\n          required: true,\n          message: '请输入题目名称',\n          trigger: 'blur'\n        }],\n        type: [{\n          required: true,\n          message: '请输入题型',\n          trigger: 'blur'\n        }]\n      },\n      ids: []\n    };\n  },\n  created() {\n    this.load(1);\n  },\n  methods: {\n    handleAdd() {\n      // 新增数据\n      this.form = {}; // 新增数据的时候清空数据\n      this.fromVisible = true; // 打开弹窗\n    },\n\n    handleEdit(row) {\n      // 编辑数据\n      this.form = JSON.parse(JSON.stringify(row)); // 给form对象赋值  注意要深拷贝数据\n      this.fromVisible = true; // 打开弹窗\n    },\n\n    save() {\n      // 保存按钮触发的逻辑  它会触发新增或者更新\n      this.$refs.formRef.validate(valid => {\n        if (valid) {\n          this.$request.post('/pages/selectById/' + this.form.pageId).then(res => {\n            if (res.code === '200') {} else {\n              this.$message.error('问卷ID不存在');\n            }\n          });\n          this.$request({\n            url: this.form.id ? '/question/update' : '/question/add',\n            method: this.form.id ? 'PUT' : 'POST',\n            data: this.form\n          }).then(res => {\n            if (res.code === '200') {\n              // 表示成功保存\n              this.$message.success('保存成功');\n              this.load(1);\n              this.fromVisible = false;\n            } else {\n              this.$message.error(res.msg); // 弹出错误的信息\n            }\n          });\n        }\n      });\n    },\n\n    del(id) {\n      // 单个删除\n      this.$confirm('您确定删除吗？', '确认删除', {\n        type: \"warning\"\n      }).then(response => {\n        this.$request.delete('/question/delete/' + id).then(res => {\n          if (res.code === '200') {\n            // 表示操作成功\n            this.$message.success('操作成功');\n            this.load(1);\n          } else {\n            this.$message.error(res.msg); // 弹出错误的信息\n          }\n        });\n      }).catch(() => {});\n    },\n    handleSelectionChange(rows) {\n      // 当前选中的所有的行数据\n      this.ids = rows.map(v => v.id); //  [1,2]\n    },\n\n    delBatch() {\n      // 批量删除\n      if (!this.ids.length) {\n        this.$message.warning('请选择数据');\n        return;\n      }\n      this.$confirm('您确定批量删除这些数据吗？', '确认删除', {\n        type: \"warning\"\n      }).then(response => {\n        this.$request.delete('/question/delete/batch', {\n          data: this.ids\n        }).then(res => {\n          if (res.code === '200') {\n            // 表示操作成功\n            this.$message.success('操作成功');\n            this.load(1);\n          } else {\n            this.$message.error(res.msg); // 弹出错误的信息\n          }\n        });\n      }).catch(() => {});\n    },\n    load(pageNum) {\n      // 分页查询\n      if (pageNum) this.pageNum = pageNum;\n      this.$request.get('/question/selectPage', {\n        params: {\n          pageNum: this.pageNum,\n          pageSize: this.pageSize,\n          name: this.name\n        }\n      }).then(res => {\n        this.tableData = res.data?.list;\n        this.total = res.data?.total;\n      });\n    },\n    reset() {\n      this.name = null;\n      this.load(1);\n    },\n    handleCurrentChange(pageNum) {\n      this.load(pageNum);\n    }\n  }\n};","map":{"version":3,"names":["name","data","tableData","pageNum","pageSize","total","fromVisible","form","user","JSON","parse","localStorage","getItem","rules","required","message","trigger","type","ids","created","load","methods","handleAdd","handleEdit","row","stringify","save","$refs","formRef","validate","valid","$request","post","pageId","then","res","code","$message","error","url","id","method","success","msg","del","$confirm","response","delete","catch","handleSelectionChange","rows","map","v","delBatch","length","warning","get","params","list","reset","handleCurrentChange"],"sources":["src/views/manager/Question.vue"],"sourcesContent":["<template>\r\n  <div>\r\n      <div class=\"search\">\r\n          <el-input placeholder=\"请输入名称查询\" style=\"width: 200px\" v-model=\"name\"></el-input>\r\n          <el-button type=\"info\" plain style=\"margin-left: 10px\" @click=\"load(1)\">查询</el-button>\r\n          <el-button type=\"warning\" plain style=\"margin-left: 10px\" @click=\"reset\">重置</el-button>\r\n      </div>\r\n\r\n    <div class=\"operation\">\r\n      <el-button type=\"primary\" plain @click=\"handleAdd\">新增</el-button>\r\n      <el-button type=\"danger\" plain @click=\"delBatch\">批量删除</el-button>\r\n    </div>\r\n\r\n    <div class=\"table\">\r\n        <el-table :data=\"tableData\" strip @selection-change=\"handleSelectionChange\">\r\n            <el-table-column type=\"selection\" width=\"55\" align=\"center\"></el-table-column>\r\n            <el-table-column prop=\"id\" label=\"序号\" width=\"70\" align=\"center\" sortable></el-table-column>\r\n            <el-table-column prop=\"name\" label=\"题目名称\"></el-table-column>\r\n            <el-table-column prop=\"type\" label=\"题目类型\"></el-table-column>\r\n            <el-table-column prop=\"pageId\" label=\"问卷ID\"></el-table-column>\r\n            <el-table-column prop=\"pageName\" label=\"问卷名称\"></el-table-column>\r\n            <el-table-column prop=\"userId\" label=\"创建人ID\"></el-table-column>\r\n            <el-table-column prop=\"userName\" label=\"创建人\"></el-table-column>\r\n            <el-table-column prop=\"createTime\" label=\"题目创建时间\"></el-table-column>\r\n            <el-table-column label=\"操作\" align=\"center\" width=\"180\">\r\n                <template v-slot=\"scope\">\r\n                    <el-button size=\"mini\" type=\"primary\" plain @click=\"handleEdit(scope.row)\">编辑</el-button>\r\n                    <el-button size=\"mini\" type=\"danger\" plain @click=\"del(scope.row.id)\">删除</el-button>\r\n                </template>\r\n            </el-table-column>\r\n        </el-table>\r\n      <div class=\"pagination\">\r\n        <el-pagination\r\n            background\r\n            @current-change=\"handleCurrentChange\"\r\n            :current-page=\"pageNum\"\r\n            :page-sizes=\"[5, 10, 20]\"\r\n            :page-size=\"pageSize\"\r\n            layout=\"total, prev, pager, next\"\r\n            :total=\"total\">\r\n        </el-pagination>\r\n      </div>\r\n    </div>\r\n\r\n\r\n    <el-dialog title=\"信息\" :visible.sync=\"fromVisible\" width=\"40%\" :close-on-click-modal=\"false\" destroy-on-close>\r\n        <el-form :model=\"form\" label-width=\"100px\" style=\"padding-right: 50px\" :rules=\"rules\" ref=\"formRef\">\r\n            <el-form-item label=\"题目名称\" prop=\"name\">\r\n                <el-input v-model=\"form.name\" placeholder=\"题目名称\"></el-input>\r\n            </el-form-item>\r\n            <el-form-item label=\"题目类型\" prop=\"type\">\r\n                <el-select style=\"width: 100%\" v-model=\"form.type\">\r\n                    <el-option value=\"单选题\"></el-option>\r\n                    <el-option value=\"多选题\"></el-option>\r\n                    <el-option value=\"填空题\"></el-option>\r\n                </el-select>\r\n            </el-form-item>\r\n            <el-form-item label=\"问卷ID\" prop=\"pageId\">\r\n                <el-input v-model=\"form.pageId\" placeholder=\"问卷ID\"></el-input>\r\n            </el-form-item>\r\n        </el-form>\r\n        <div slot=\"footer\" class=\"dialog-footer\">\r\n        <el-button @click=\"fromVisible = false\">取 消</el-button>\r\n        <el-button type=\"primary\" @click=\"save\">确 定</el-button>\r\n      </div>\r\n    </el-dialog>\r\n\r\n\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nexport default {\r\n  name: \"Question\",\r\n  data() {\r\n    return {\r\n      tableData: [],  // 所有的数据\r\n      pageNum: 1,   // 当前的页码\r\n      pageSize: 10,  // 每页显示的个数\r\n      total: 0,\r\n      name: null,\r\n      fromVisible: false,\r\n      form: {},\r\n      user: JSON.parse(localStorage.getItem('xm-user') || '{}'),\r\n      rules: {\r\n        name: [\r\n          {required: true, message: '请输入题目名称', trigger: 'blur'},\r\n        ],\r\n        type: [\r\n          {required: true, message: '请输入题型', trigger: 'blur'},\r\n        ]\r\n      },\r\n      ids: []\r\n    }\r\n  },\r\n  created() {\r\n    this.load(1)\r\n  },\r\n  methods: {\r\n\r\n    handleAdd() {   // 新增数据\r\n      this.form = {}  // 新增数据的时候清空数据\r\n      this.fromVisible = true   // 打开弹窗\r\n    },\r\n    handleEdit(row) {   // 编辑数据\r\n      this.form = JSON.parse(JSON.stringify(row))  // 给form对象赋值  注意要深拷贝数据\r\n      this.fromVisible = true   // 打开弹窗\r\n    },\r\n    save() {   // 保存按钮触发的逻辑  它会触发新增或者更新\r\n      this.$refs.formRef.validate((valid) => {\r\n        if (valid) {\r\n\r\n            this.$request.post('/pages/selectById/' + this.form.pageId).then(res => {\r\n                if (res.code === '200') {\r\n\r\n                } else {\r\n                    this.$message.error('问卷ID不存在')\r\n                }\r\n            })\r\n          this.$request({\r\n            url: this.form.id ? '/question/update' : '/question/add',\r\n            method: this.form.id ? 'PUT' : 'POST',\r\n            data: this.form\r\n          }).then(res => {\r\n            if (res.code === '200') {  // 表示成功保存\r\n              this.$message.success('保存成功')\r\n              this.load(1)\r\n              this.fromVisible = false\r\n            } else {\r\n              this.$message.error(res.msg)  // 弹出错误的信息\r\n            }\r\n          })\r\n        }\r\n      })\r\n    },\r\n    del(id) {   // 单个删除\r\n      this.$confirm('您确定删除吗？', '确认删除', {type: \"warning\"}).then(response => {\r\n        this.$request.delete('/question/delete/' + id).then(res => {\r\n          if (res.code === '200') {   // 表示操作成功\r\n            this.$message.success('操作成功')\r\n            this.load(1)\r\n          } else {\r\n            this.$message.error(res.msg)  // 弹出错误的信息\r\n          }\r\n        })\r\n      }).catch(() => {\r\n      })\r\n    },\r\n    handleSelectionChange(rows) {   // 当前选中的所有的行数据\r\n      this.ids = rows.map(v => v.id)   //  [1,2]\r\n    },\r\n    delBatch() {   // 批量删除\r\n      if (!this.ids.length) {\r\n        this.$message.warning('请选择数据')\r\n        return\r\n      }\r\n      this.$confirm('您确定批量删除这些数据吗？', '确认删除', {type: \"warning\"}).then(response => {\r\n        this.$request.delete('/question/delete/batch', {data: this.ids}).then(res => {\r\n          if (res.code === '200') {   // 表示操作成功\r\n            this.$message.success('操作成功')\r\n            this.load(1)\r\n          } else {\r\n            this.$message.error(res.msg)  // 弹出错误的信息\r\n          }\r\n        })\r\n      }).catch(() => {\r\n      })\r\n    },\r\n    load(pageNum) {  // 分页查询\r\n      if (pageNum) this.pageNum = pageNum\r\n      this.$request.get('/question/selectPage', {\r\n        params: {\r\n          pageNum: this.pageNum,\r\n          pageSize: this.pageSize,\r\n          name: this.name,\r\n        }\r\n      }).then(res => {\r\n        this.tableData = res.data?.list\r\n        this.total = res.data?.total\r\n      })\r\n    },\r\n    reset() {\r\n      this.name = null\r\n      this.load(1)\r\n    },\r\n    handleCurrentChange(pageNum) {\r\n      this.load(pageNum)\r\n    },\r\n  }\r\n}\r\n</script>\r\n\r\n<style scoped>\r\n\r\n</style>\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}