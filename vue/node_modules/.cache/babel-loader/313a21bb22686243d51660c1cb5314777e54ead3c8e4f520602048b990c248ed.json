{"ast":null,"code":"import * as echarts from 'echarts';\nlet chartOption = {};\nexport default {\n  name: \"Chart\",\n  data() {\n    return {\n      pagesList: [],\n      tableData: [],\n      // 所有的数据\n      pageNum: 1,\n      // 当前的页码\n      pageSize: 4,\n      // 每页显示的个数\n      total: 0,\n      form: {},\n      backendData: '',\n      myChart: '',\n      user: JSON.parse(localStorage.getItem('xm-user') || '{}')\n    };\n  },\n  mounted() {\n    let chartDom = document.getElementById(\"aiOption\");\n    this.myChart = echarts.init(chartDom);\n    this.myChart.setOption(chartOption);\n  },\n  created() {\n    this.load(1);\n  },\n  // methods：本页面所有的点击事件或者其他函数定义区\n  methods: {\n    load(pageNum) {\n      if (pageNum) this.pageNum = pageNum;\n      this.$request.get('/chart/selectPage', {\n        params: {\n          pageNum: this.pageNum,\n          pageSize: this.pageSize\n        }\n      }).then(res => {\n        console.log(\"res=\", res.data);\n        this.tableData = res.data?.list;\n        console.log(\"tableData=\", this.tableData);\n        console.log(\"tableData[0]=\", this.tableData[0]);\n        this.total = res.data?.total;\n        this.backendData = res.data[1];\n        // res.data[0]是一个JSON字符串，需要将其解析为对象\n        try {\n          this.chartOption = JSON.parse(res.data[0].genChart);\n          this.myChart.setOption(this.chartOption); // 使用解析后的对象更新图表\n        } catch (error) {\n          console.error(\"解析chartOption时出错:\", error);\n          this.$message.error(\"图表配置解析失败\");\n        }\n        console.log(res.data);\n\n        // 更新pagesList以展示当前页的内容\n        this.pagesList = this.tableData; // 或者使用.concat()方法等\n        console.log(\"this.pagesList=\", this.pagesList);\n      });\n    }\n  }\n};","map":{"version":3,"names":["echarts","chartOption","name","data","pagesList","tableData","pageNum","pageSize","total","form","backendData","myChart","user","JSON","parse","localStorage","getItem","mounted","chartDom","document","getElementById","init","setOption","created","load","methods","$request","get","params","then","res","console","log","list","genChart","error","$message"],"sources":["src/views/front/MyChart.vue"],"sourcesContent":["<template>\r\n    <div class=\"main-content\">\r\n\r\n        <div style=\"display: flex;margin-left: 2%;margin-top:20px;margin-right: 2%;height: 100%;\">\r\n            <div class=\"title\" style=\"width:35%;height: 50%;font-size:30px;background-color: #fff;border-radius: 20px;\">\r\n                <div style=\"margin:20px 33%;\">\r\n                    <strong>AI智能分析</strong>\r\n                </div>\r\n\r\n            </div>\r\n        </div>\r\n        <el-row :gutter=\"10\">\r\n            <el-col shadow=\"hover\" :span=\"18\" v-for=\"item in pagesList\" :key=\"item.id\"\r\n                    style=\"margin-top:30px;margin-left: 160px\">\r\n                <div class=\"text\" style=\"width:38%;background-color:#fff;border-radius: 20px;\">\r\n                    <div class=\"text-title\" style=\"border-radius:3px;font-size:30px;margin:20px 2%;width: 95%;\">\r\n                        <strong>AI分析图表结论</strong>\r\n                        <div style=\"margin:20px 20px;word-wrap: break-word;font-size: 20px;\">{{ item.genResult }}</div>\r\n                    </div>\r\n                    <el-divider></el-divider>\r\n\r\n                    <div class=\"table-title\" style=\"width:100%;background-color:#fff;border-radius: 20px;\">\r\n                        <div class=\"box-title\" style=\"border-radius:3px;font-size:30px;margin:20px 2%;width: 95%;\">\r\n                            <strong>AI可视化图表</strong>\r\n                            <div style=\"margin-left: 40px;margin-top: 80px; display: flex; grid-gap: 10px\">\r\n                                <div style=\"flex: 1\">\r\n                                    <div style=\"height: 400px\" id=\"aiOption\"></div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n\r\n                </div>\r\n            </el-col>\r\n        </el-row>\r\n\r\n\r\n    </div>\r\n\r\n</template>\r\n\r\n<script>\r\nimport * as echarts from 'echarts'\r\n\r\nlet chartOption = {};\r\n\r\n\r\nexport default {\r\n    name: \"Chart\",\r\n    data() {\r\n        return {\r\n            pagesList: [],\r\n            tableData: [],  // 所有的数据\r\n            pageNum: 1,   // 当前的页码\r\n            pageSize: 4,  // 每页显示的个数\r\n            total: 0,\r\n            form: {},\r\n            backendData: '',\r\n            myChart: '',\r\n            user: JSON.parse(localStorage.getItem('xm-user') || '{}'),\r\n        }\r\n\r\n    },\r\n    mounted() {\r\n        let chartDom = document.getElementById(\"aiOption\");\r\n        this.myChart = echarts.init(chartDom);\r\n        this.myChart.setOption(chartOption)\r\n\r\n    },\r\n    created() {\r\n        this.load(1)\r\n    },\r\n    // methods：本页面所有的点击事件或者其他函数定义区\r\n    methods: {\r\n        load(pageNum) {\r\n            if (pageNum) this.pageNum = pageNum\r\n            this.$request.get('/chart/selectPage', {\r\n                params: {\r\n                    pageNum: this.pageNum,\r\n                    pageSize: this.pageSize,\r\n                }\r\n            }).then(res => {\r\n                console.log(\"res=\", res.data)\r\n                this.tableData = res.data?.list\r\n                console.log(\"tableData=\",this.tableData)\r\n                console.log(\"tableData[0]=\",this.tableData[0])\r\n                this.total = res.data?.total\r\n                this.backendData = res.data[1];\r\n                // res.data[0]是一个JSON字符串，需要将其解析为对象\r\n                try {\r\n                    this.chartOption = JSON.parse(res.data[0].genChart);\r\n                    this.myChart.setOption(this.chartOption); // 使用解析后的对象更新图表\r\n                } catch (error) {\r\n                    console.error(\"解析chartOption时出错:\", error);\r\n                    this.$message.error(\"图表配置解析失败\");\r\n                }\r\n                console.log(res.data)\r\n\r\n                // 更新pagesList以展示当前页的内容\r\n                this.pagesList = this.tableData  // 或者使用.concat()方法等\r\n                console.log(\"this.pagesList=\", this.pagesList)\r\n            })\r\n        }\r\n    },\r\n}\r\n</script>\r\n\r\n<style>\r\nbody {\r\n    background-color: #dac9c9;\r\n}\r\n</style>"],"mappings":"AA0CA,YAAAA,OAAA;AAEA,IAAAC,WAAA;AAGA;EACAC,IAAA;EACAC,KAAA;IACA;MACAC,SAAA;MACAC,SAAA;MAAA;MACAC,OAAA;MAAA;MACAC,QAAA;MAAA;MACAC,KAAA;MACAC,IAAA;MACAC,WAAA;MACAC,OAAA;MACAC,IAAA,EAAAC,IAAA,CAAAC,KAAA,CAAAC,YAAA,CAAAC,OAAA;IACA;EAEA;EACAC,QAAA;IACA,IAAAC,QAAA,GAAAC,QAAA,CAAAC,cAAA;IACA,KAAAT,OAAA,GAAAX,OAAA,CAAAqB,IAAA,CAAAH,QAAA;IACA,KAAAP,OAAA,CAAAW,SAAA,CAAArB,WAAA;EAEA;EACAsB,QAAA;IACA,KAAAC,IAAA;EACA;EACA;EACAC,OAAA;IACAD,KAAAlB,OAAA;MACA,IAAAA,OAAA,OAAAA,OAAA,GAAAA,OAAA;MACA,KAAAoB,QAAA,CAAAC,GAAA;QACAC,MAAA;UACAtB,OAAA,OAAAA,OAAA;UACAC,QAAA,OAAAA;QACA;MACA,GAAAsB,IAAA,CAAAC,GAAA;QACAC,OAAA,CAAAC,GAAA,SAAAF,GAAA,CAAA3B,IAAA;QACA,KAAAE,SAAA,GAAAyB,GAAA,CAAA3B,IAAA,EAAA8B,IAAA;QACAF,OAAA,CAAAC,GAAA,oBAAA3B,SAAA;QACA0B,OAAA,CAAAC,GAAA,uBAAA3B,SAAA;QACA,KAAAG,KAAA,GAAAsB,GAAA,CAAA3B,IAAA,EAAAK,KAAA;QACA,KAAAE,WAAA,GAAAoB,GAAA,CAAA3B,IAAA;QACA;QACA;UACA,KAAAF,WAAA,GAAAY,IAAA,CAAAC,KAAA,CAAAgB,GAAA,CAAA3B,IAAA,IAAA+B,QAAA;UACA,KAAAvB,OAAA,CAAAW,SAAA,MAAArB,WAAA;QACA,SAAAkC,KAAA;UACAJ,OAAA,CAAAI,KAAA,sBAAAA,KAAA;UACA,KAAAC,QAAA,CAAAD,KAAA;QACA;QACAJ,OAAA,CAAAC,GAAA,CAAAF,GAAA,CAAA3B,IAAA;;QAEA;QACA,KAAAC,SAAA,QAAAC,SAAA;QACA0B,OAAA,CAAAC,GAAA,yBAAA5B,SAAA;MACA;IACA;EACA;AACA"},"metadata":{},"sourceType":"module","externalDependencies":[]}