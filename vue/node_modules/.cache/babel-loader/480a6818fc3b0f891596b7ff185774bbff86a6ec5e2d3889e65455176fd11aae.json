{"ast":null,"code":"import \"core-js/modules/web.url-search-params.delete.js\";\nimport \"core-js/modules/web.url-search-params.has.js\";\nimport \"core-js/modules/web.url-search-params.size.js\";\nimport * as echarts from 'echarts';\nlet chartOption = {\n  \"title\": {\n    \"text\": \"问卷结果可视化\",\n    \"subtext\": \"根据问卷结果分析\"\n  },\n  \"tooltip\": {\n    \"trigger\": \"axis\",\n    \"axisPointer\": {\n      \"type\": \"shadow\"\n    }\n  },\n  \"legend\": {\n    \"data\": [\"星期一\", \"星期二\", \"星期三\", \"星期四\", \"对的\", \"不对\"]\n  },\n  \"grid\": {\n    \"left\": \"3%\",\n    \"right\": \"4%\",\n    \"bottom\": \"3%\",\n    \"containLabel\": true\n  },\n  \"xAxis\": {\n    \"type\": \"value\",\n    \"boundaryGap\": [0, 0.01]\n  },\n  \"yAxis\": {\n    \"type\": \"category\",\n    \"data\": [\"星期一\", \"星期二\", \"星期三\", \"星期四\", \"对的\", \"不对\"]\n  },\n  \"series\": [{\n    \"name\": \"作答人数\",\n    \"type\": \"bar\",\n    \"data\": [2, 1, 0, 0, 1, 1]\n  }]\n};\nexport default {\n  name: \"Chart\",\n  data() {\n    return {\n      fromVisible: false,\n      form: {},\n      backendData: '',\n      test: '',\n      questionGoalNameType: [],\n      questionGoal: '',\n      questionName: '',\n      questionType: '',\n      // chartOption: null,\n      mychart: '',\n      user: JSON.parse(localStorage.getItem('xm-user') || '{}'),\n      rules: {\n        goal: [{\n          required: true,\n          message: '请输入分析目标',\n          trigger: 'blur'\n        }],\n        name: [{\n          required: true,\n          message: '请输入问卷名称',\n          trigger: 'blur'\n        }],\n        type: [{\n          required: true,\n          message: '请选择图表类型',\n          trigger: 'blur'\n        }]\n      }\n    };\n  },\n  mounted() {\n    let chartDom = document.getElementById(\"aiOption\");\n    this.myChart = echarts.init(chartDom);\n  },\n  // methods：本页面所有的点击事件或者其他函数定义区\n  methods: {\n    getData(pageId) {\n      this.$request.get('/pageCount', {\n        params: {\n          pageId: pageId\n        }\n      }).then(res => {\n        this.pageCount = res.data || {};\n        console.log(this.pageCount);\n        this.$request.post('/chart/gen', {\n          answerCount: this.pageCount,\n          questionGoalNameType: this.questionGoalNameType\n        }).then(res => {\n          if (res.code === '200') {\n            this.$message.success(\"提交成功！AI正在分析中...\");\n            this.backendData = res.data[1];\n            chartOption = res.data[0];\n            console.log(res.data[0]);\n            console.log(\"this.chartOption =\", chartOption);\n            //传值\n            this.myChart.setOption(chartOption);\n          } else {\n            this.$message.error(res.msg);\n          }\n        });\n      });\n    },\n    getPageChart() {\n      this.questionGoalNameType = [this.form.questionGoal, this.form.questionName, this.form.questionType];\n      // 获取当前页面的 URL 参数部分\n      const urlParams = new URLSearchParams(window.location.search);\n      // 获取特定参数的值，比如 pageId\n      let pageId = urlParams.get('pageId');\n      this.getData(pageId);\n    },\n    reset() {\n      this.form.questionGoal = null;\n      this.form.questionName = null;\n      this.form.questionType = null;\n    }\n  }\n};","map":{"version":3,"names":["echarts","chartOption","name","data","fromVisible","form","backendData","test","questionGoalNameType","questionGoal","questionName","questionType","mychart","user","JSON","parse","localStorage","getItem","rules","goal","required","message","trigger","type","mounted","chartDom","document","getElementById","myChart","init","methods","getData","pageId","$request","get","params","then","res","pageCount","console","log","post","answerCount","code","$message","success","setOption","error","msg","getPageChart","urlParams","URLSearchParams","window","location","search","reset"],"sources":["src/views/front/Chart.vue"],"sourcesContent":["<template>\r\n    <div class=\"main-content\">\r\n\r\n        <div class=\"big-box\"\r\n             style=\"padding-bottom:10px;border-radius:20px;height:50%;width: 32%;margin: 30px 15%;background-color:#fff;\">\r\n            <div class=\"box-title\" style=\"border-radius:3px;font-size:25px;margin:0px 32%;padding:21px;width: 58.3%\">\r\n                <strong>AI智能分析</strong>\r\n            </div>\r\n            <el-form ref=\"form\" :model=\"form\" label-width=\"80px\" style=\"margin-left: 10px;margin-right: 20px\"\r\n                     :rules=\"rules\">\r\n                <el-form-item label=\"分析目标\" prop=\"goal\">\r\n                    <el-input placeholder=\"请输入需要分析的内容\" v-model=\"form.questionGoal\"></el-input>\r\n                </el-form-item>\r\n                <el-form-item label=\"问卷名称\" prop=\"name\">\r\n                    <el-input placeholder=\"请输入问卷名称\" v-model=\"form.questionName\"></el-input>\r\n                </el-form-item>\r\n                <el-form-item label=\"图表类型\" prop=\"type\">\r\n                    <el-select v-model=\"form.questionType\" placeholder=\"请选择图表类型\">\r\n                        <el-option value=\"柱形图\" label=\"柱形图\"></el-option>\r\n                        <el-option value=\"折线图\" label=\"折线图\"></el-option>\r\n                        <el-option value=\"饼图\" label=\"饼图\"></el-option>\r\n                        <el-option value=\"散点图\" label=\"散点图\"></el-option>\r\n                        <el-option value=\"雷达图\" label=\"雷达图\"></el-option>\r\n\r\n                    </el-select>\r\n                </el-form-item>\r\n                <el-form-item>\r\n                    <el-button style=\" background-color: #333; border-color: #333; color: white\" type=\"primary\"\r\n                               @click=\"getPageChart\">提 交\r\n                    </el-button>\r\n                    <el-button style=\" background-color: #333; border-color: #333; color: white\" @click=\"reset\">重 置\r\n                    </el-button>\r\n                </el-form-item>\r\n\r\n\r\n            </el-form>\r\n            <div class=\"box-title\" style=\"border-radius:3px;font-size:20px;margin-left:20px;padding:21px;width: 95%\">\r\n                <strong>AI分析结论</strong>\r\n                <div>{{ backendData }}</div>\r\n            </div>\r\n\r\n        </div>\r\n\r\n        <div class=\"big-box\"\r\n             style=\"padding-bottom:10px;border-radius:20px;height:50%;width: 45%;margin-left: 50%;margin-top:-25.2%;background-color:#fff;\">\r\n            <div class=\"box-title\" style=\"border-radius:3px;font-size:25px;margin-left:20px;padding:21px;width: 58.3%\">\r\n                <strong>AI可视化图表</strong>\r\n                <div>{{ test }}</div>\r\n                <div style=\"margin: 10px 0; display: flex; grid-gap: 10px\">\r\n                    <div style=\"flex: 1\">\r\n                        <div style=\"height: 400px\" id=\"aiOption\"></div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n\r\n</template>\r\n\r\n<script>\r\nimport * as echarts from 'echarts'\r\nlet chartOption={\r\n    \"title\": {\r\n        \"text\": \"问卷结果可视化\",\r\n        \"subtext\": \"根据问卷结果分析\"\r\n    },\r\n    \"tooltip\": {\r\n        \"trigger\": \"axis\",\r\n        \"axisPointer\": {\r\n            \"type\": \"shadow\"\r\n        }\r\n    },\r\n    \"legend\": {\r\n        \"data\": [\"星期一\", \"星期二\", \"星期三\", \"星期四\", \"对的\", \"不对\"]\r\n    },\r\n    \"grid\": {\r\n        \"left\": \"3%\",\r\n        \"right\": \"4%\",\r\n        \"bottom\": \"3%\",\r\n        \"containLabel\": true\r\n    },\r\n    \"xAxis\": {\r\n        \"type\": \"value\",\r\n        \"boundaryGap\": [0, 0.01]\r\n    },\r\n    \"yAxis\": {\r\n        \"type\": \"category\",\r\n        \"data\": [\"星期一\", \"星期二\", \"星期三\", \"星期四\", \"对的\", \"不对\"]\r\n    },\r\n    \"series\": [\r\n        {\r\n            \"name\": \"作答人数\",\r\n            \"type\": \"bar\",\r\n            \"data\": [2, 1, 0, 0, 1, 1]\r\n        }\r\n    ]\r\n}\r\nexport default {\r\n    name: \"Chart\",\r\n    data() {\r\n        return {\r\n            fromVisible: false,\r\n            form: {},\r\n            backendData: '',\r\n            test: '',\r\n            questionGoalNameType: [],\r\n            questionGoal: '',\r\n            questionName: '',\r\n            questionType: '',\r\n            // chartOption: null,\r\n            mychart: '',\r\n            user: JSON.parse(localStorage.getItem('xm-user') || '{}'),\r\n            rules: {\r\n                goal: [\r\n                    {required: true, message: '请输入分析目标', trigger: 'blur'},\r\n                ],\r\n                name: [\r\n                    {required: true, message: '请输入问卷名称', trigger: 'blur'},\r\n                ],\r\n                type: [\r\n                    {required: true, message: '请选择图表类型', trigger: 'blur'},\r\n                ],\r\n            },\r\n        }\r\n    },\r\n    mounted() {\r\n        let chartDom = document.getElementById(\"aiOption\");\r\n        this.myChart = echarts.init(chartDom);\r\n\r\n    },\r\n    // methods：本页面所有的点击事件或者其他函数定义区\r\n    methods: {\r\n        getData(pageId) {\r\n            this.$request.get('/pageCount', {\r\n                params: {\r\n                    pageId: pageId\r\n                }\r\n            }).then(res => {\r\n                this.pageCount = res.data || {};\r\n                console.log(this.pageCount);\r\n                this.$request.post('/chart/gen', {\r\n                    answerCount: this.pageCount,\r\n                    questionGoalNameType: this.questionGoalNameType\r\n                }).then(res => {\r\n                    if (res.code === '200') {\r\n                        this.$message.success(\"提交成功！AI正在分析中...\");\r\n                        this.backendData = res.data[1];\r\n                        chartOption = res.data[0];\r\n                        console.log(res.data[0]);\r\n                        console.log(\"this.chartOption =\", chartOption);\r\n                        //传值\r\n                        this.myChart.setOption(chartOption)\r\n\r\n                    } else {\r\n                        this.$message.error(res.msg);\r\n                    }\r\n                });\r\n            });\r\n        },\r\n\r\n        getPageChart() {\r\n\r\n            this.questionGoalNameType = [this.form.questionGoal, this.form.questionName, this.form.questionType]\r\n            // 获取当前页面的 URL 参数部分\r\n            const urlParams = new URLSearchParams(window.location.search);\r\n            // 获取特定参数的值，比如 pageId\r\n            let pageId = urlParams.get('pageId');\r\n            this.getData(pageId)\r\n        },\r\n        reset() {\r\n            this.form.questionGoal = null\r\n            this.form.questionName = null\r\n            this.form.questionType = null\r\n        },\r\n    }\r\n}\r\n</script>\r\n\r\n<style>\r\nbody {\r\n    background-color: #dac9c9;\r\n}\r\n</style>"],"mappings":";;;AA4DA,YAAAA,OAAA;AACA,IAAAC,WAAA;EACA;IACA;IACA;EACA;EACA;IACA;IACA;MACA;IACA;EACA;EACA;IACA;EACA;EACA;IACA;IACA;IACA;IACA;EACA;EACA;IACA;IACA;EACA;EACA;IACA;IACA;EACA;EACA,WACA;IACA;IACA;IACA;EACA;AAEA;AACA;EACAC,IAAA;EACAC,KAAA;IACA;MACAC,WAAA;MACAC,IAAA;MACAC,WAAA;MACAC,IAAA;MACAC,oBAAA;MACAC,YAAA;MACAC,YAAA;MACAC,YAAA;MACA;MACAC,OAAA;MACAC,IAAA,EAAAC,IAAA,CAAAC,KAAA,CAAAC,YAAA,CAAAC,OAAA;MACAC,KAAA;QACAC,IAAA,GACA;UAAAC,QAAA;UAAAC,OAAA;UAAAC,OAAA;QAAA,EACA;QACApB,IAAA,GACA;UAAAkB,QAAA;UAAAC,OAAA;UAAAC,OAAA;QAAA,EACA;QACAC,IAAA,GACA;UAAAH,QAAA;UAAAC,OAAA;UAAAC,OAAA;QAAA;MAEA;IACA;EACA;EACAE,QAAA;IACA,IAAAC,QAAA,GAAAC,QAAA,CAAAC,cAAA;IACA,KAAAC,OAAA,GAAA5B,OAAA,CAAA6B,IAAA,CAAAJ,QAAA;EAEA;EACA;EACAK,OAAA;IACAC,QAAAC,MAAA;MACA,KAAAC,QAAA,CAAAC,GAAA;QACAC,MAAA;UACAH,MAAA,EAAAA;QACA;MACA,GAAAI,IAAA,CAAAC,GAAA;QACA,KAAAC,SAAA,GAAAD,GAAA,CAAAlC,IAAA;QACAoC,OAAA,CAAAC,GAAA,MAAAF,SAAA;QACA,KAAAL,QAAA,CAAAQ,IAAA;UACAC,WAAA,OAAAJ,SAAA;UACA9B,oBAAA,OAAAA;QACA,GAAA4B,IAAA,CAAAC,GAAA;UACA,IAAAA,GAAA,CAAAM,IAAA;YACA,KAAAC,QAAA,CAAAC,OAAA;YACA,KAAAvC,WAAA,GAAA+B,GAAA,CAAAlC,IAAA;YACAF,WAAA,GAAAoC,GAAA,CAAAlC,IAAA;YACAoC,OAAA,CAAAC,GAAA,CAAAH,GAAA,CAAAlC,IAAA;YACAoC,OAAA,CAAAC,GAAA,uBAAAvC,WAAA;YACA;YACA,KAAA2B,OAAA,CAAAkB,SAAA,CAAA7C,WAAA;UAEA;YACA,KAAA2C,QAAA,CAAAG,KAAA,CAAAV,GAAA,CAAAW,GAAA;UACA;QACA;MACA;IACA;IAEAC,aAAA;MAEA,KAAAzC,oBAAA,SAAAH,IAAA,CAAAI,YAAA,OAAAJ,IAAA,CAAAK,YAAA,OAAAL,IAAA,CAAAM,YAAA;MACA;MACA,MAAAuC,SAAA,OAAAC,eAAA,CAAAC,MAAA,CAAAC,QAAA,CAAAC,MAAA;MACA;MACA,IAAAtB,MAAA,GAAAkB,SAAA,CAAAhB,GAAA;MACA,KAAAH,OAAA,CAAAC,MAAA;IACA;IACAuB,MAAA;MACA,KAAAlD,IAAA,CAAAI,YAAA;MACA,KAAAJ,IAAA,CAAAK,YAAA;MACA,KAAAL,IAAA,CAAAM,YAAA;IACA;EACA;AACA"},"metadata":{},"sourceType":"module","externalDependencies":[]}