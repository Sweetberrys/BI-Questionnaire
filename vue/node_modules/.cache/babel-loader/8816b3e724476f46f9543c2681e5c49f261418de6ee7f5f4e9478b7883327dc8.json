{"ast":null,"code":"import * as echarts from 'echarts';\nexport default {\n  name: \"ChartForTableAsync\",\n  data() {\n    return {\n      fromVisible: false,\n      form: {},\n      backendData: '',\n      goalNameType: [],\n      resultData: '',\n      user: JSON.parse(localStorage.getItem('xm-user') || '{}'),\n      rules: {\n        goal: [{\n          required: true,\n          message: '请输入分析目标',\n          trigger: 'blur'\n        }],\n        name: [{\n          required: true,\n          message: '请输入问卷名称',\n          trigger: 'blur'\n        }],\n        type: [{\n          required: true,\n          message: '请选择图表类型',\n          trigger: 'blur'\n        }]\n      }\n    };\n  },\n  mounted() {\n    let chartDom = document.getElementById(\"aiOption\");\n    this.myChart = echarts.init(chartDom);\n    this.myChart.setOption(chartOption);\n  },\n  // methods：本页面所有的点击事件或者其他函数定义区\n  methods: {\n    handleImport(res) {\n      if (res.code === '200') {\n        // 成功\n        this.$message.success('上传成功');\n        console.log(\"res.data=\" + res.data);\n        this.resultData = res.data;\n      } else {\n        this.$message.error(res.msg);\n      }\n    },\n    getData(data) {\n      data = this.resultData;\n      this.$request.post('/chart/createTable/async?fileName=' + data, {\n        goalNameType: this.goalNameType\n      }).then(res => {\n        if (res.code === '200') {\n          this.$message.success(\"AI正在分析中...，请前往我的AI图表进行查看\");\n          console.log(\"res.data=\", res.data);\n        } else {\n          this.$message.error(res.msg);\n        }\n        console.log(res.data);\n      }).catch(error => {\n        console.error(\"请求出错:\", error);\n        this.$message.error(\"请求失败\");\n      });\n    },\n    getPageChart() {\n      if (this.form.type != null && this.form.goal != null && this.form.name != null) {\n        this.goalNameType = [this.form.goal, this.form.name, this.form.type];\n        // 获取当前页面的 URL 参数部分\n        this.getData();\n      } else {\n        this.$message.error(\"参数有误\");\n      }\n      console.log(\"---------------\");\n      console.log(this.form.goal);\n      console.log(this.form.name);\n      console.log(this.form.type);\n      console.log(\"--------------\");\n    },\n    reset() {\n      this.form.goal = null;\n      this.form.name = null;\n      this.form.type = null;\n    }\n  }\n};","map":{"version":3,"names":["echarts","name","data","fromVisible","form","backendData","goalNameType","resultData","user","JSON","parse","localStorage","getItem","rules","goal","required","message","trigger","type","mounted","chartDom","document","getElementById","myChart","init","setOption","chartOption","methods","handleImport","res","code","$message","success","console","log","error","msg","getData","$request","post","then","catch","getPageChart","reset"],"sources":["src/views/front/ChartForTableAsync.vue"],"sourcesContent":["<template>\r\n    <div class=\"main-content\">\r\n\r\n        <div style=\"display: flex;margin:20px 6%;\">\r\n            <div class=\"title\" style=\"width:100%;height: 500px;font-size:30px;background-color: #fff;border-radius: 20px;\">\r\n                <div style=\"margin:20px 43%;\">\r\n                    <strong>AI智能分析</strong>\r\n\r\n                </div>\r\n                <el-divider></el-divider>\r\n\r\n                <div style=\"margin-left: 25%;\">\r\n                    <el-form ref=\"form\" :model=\"form\" label-width=\"80px\"\r\n                             style=\"margin-left: 10px;margin-right: 20px;width: 60%;\"\r\n                             :rules=\"rules\">\r\n                        <el-form-item label=\"分析目标\" prop=\"goal\">\r\n                            <el-input placeholder=\"请输入需要分析的内容\" v-model=\"form.goal\"></el-input>\r\n                        </el-form-item>\r\n                        <el-form-item label=\"图表名称\" prop=\"name\">\r\n                            <el-input placeholder=\"请输入图表名称\" v-model=\"form.name\"></el-input>\r\n                        </el-form-item>\r\n                        <el-form-item label=\"上传图表\">\r\n                            <el-upload :show-file-list=\"false\" style=\"margin-left:20px;display: inline-block; margin-left: 10px\" :action=\"$baseUrl + '/fileOperation/upload'\" :headers=\"{ token: user.token }\" :on-success=\"handleImport\" >\r\n                                <el-button type=\"info\" plain>上传文件</el-button>\r\n                            </el-upload>\r\n\r\n                        </el-form-item>\r\n                        <el-form-item label=\"图表类型\" prop=\"type\">\r\n                            <el-select v-model=\"form.type\" placeholder=\"请选择图表类型\">\r\n                                <el-option value=\"柱形图\" label=\"柱形图\"></el-option>\r\n                                <el-option value=\"折线图\" label=\"折线图\"></el-option>\r\n                                <el-option value=\"饼图\" label=\"饼图\"></el-option>\r\n                                <el-option value=\"散点图\" label=\"散点图\"></el-option>\r\n                                <el-option value=\"雷达图\" label=\"雷达图\"></el-option>\r\n                                <el-option value=\"K线图\" label=\"K线图\"></el-option>\r\n                                <el-option value=\"盒须图\" label=\"盒须图\"></el-option>\r\n                                <el-option value=\"旭日图\" label=\"旭日图\"></el-option>\r\n                            </el-select>\r\n                        </el-form-item>\r\n                        <el-form-item>\r\n                            <el-button style=\" background-color: #333; border-color: #333; color: white\" type=\"primary\"\r\n                                       @click=\"getPageChart\">提 交\r\n                            </el-button>\r\n                            <el-button style=\" background-color: #333; border-color: #333; color: white\" @click=\"reset\">\r\n                                重 置\r\n                            </el-button>\r\n                        </el-form-item>\r\n\r\n                    </el-form>\r\n                </div>\r\n\r\n            </div>\r\n\r\n\r\n\r\n        </div>\r\n\r\n\r\n    </div>\r\n\r\n</template>\r\n\r\n<script>\r\nimport * as echarts from 'echarts'\r\n\r\n\r\n\r\nexport default {\r\n    name: \"ChartForTableAsync\",\r\n    data() {\r\n        return {\r\n            fromVisible: false,\r\n            form: {},\r\n            backendData: '',\r\n            goalNameType: [],\r\n            resultData:'',\r\n            user: JSON.parse(localStorage.getItem('xm-user') || '{}'),\r\n            rules: {\r\n                goal: [\r\n                    {required: true, message: '请输入分析目标', trigger: 'blur'},\r\n                ],\r\n                name: [\r\n                    {required: true, message: '请输入问卷名称', trigger: 'blur'},\r\n                ],\r\n                type: [\r\n                    {required: true, message: '请选择图表类型', trigger: 'blur'},\r\n                ],\r\n            },\r\n        }\r\n\r\n    },\r\n    mounted() {\r\n        let chartDom = document.getElementById(\"aiOption\");\r\n        this.myChart = echarts.init(chartDom);\r\n        this.myChart.setOption(chartOption)\r\n\r\n    },\r\n    // methods：本页面所有的点击事件或者其他函数定义区\r\n    methods: {\r\n        handleImport(res) {\r\n            if (res.code === '200') {  // 成功\r\n                this.$message.success('上传成功')\r\n                console.log(\"res.data=\"+res.data)\r\n                this.resultData=res.data;\r\n            } else {\r\n                this.$message.error(res.msg)\r\n            }\r\n        },\r\n        getData(data) {\r\n            data=this.resultData\r\n            this.$request.post('/chart/createTable/async?fileName='+data,{\r\n                goalNameType: this.goalNameType,\r\n            }).then(res =>{\r\n                if (res.code === '200') {\r\n                    this.$message.success(\"AI正在分析中...，请前往我的AI图表进行查看\");\r\n                    console.log(\"res.data=\",res.data)\r\n                } else {\r\n                    this.$message.error(res.msg);\r\n                }\r\n                console.log(res.data)\r\n            }).catch(error => {\r\n                console.error(\"请求出错:\", error);\r\n                this.$message.error(\"请求失败\");\r\n            });\r\n        },\r\n\r\n        getPageChart() {\r\n            if (this.form.type != null && this.form.goal != null && this.form.name != null) {\r\n                this.goalNameType = [this.form.goal, this.form.name, this.form.type]\r\n                // 获取当前页面的 URL 参数部分\r\n                this.getData()\r\n            } else {\r\n                this.$message.error(\"参数有误\")\r\n\r\n            }\r\n            console.log(\"---------------\")\r\n            console.log(this.form.goal)\r\n            console.log(this.form.name)\r\n            console.log(this.form.type)\r\n            console.log(\"--------------\")\r\n\r\n        },\r\n        reset() {\r\n            this.form.goal = null\r\n            this.form.name = null\r\n            this.form.type = null\r\n        },\r\n    }\r\n}\r\n</script>\r\n\r\n<style>\r\nbody {\r\n    background-color: #dac9c9;\r\n}\r\n</style>"],"mappings":"AA+DA,YAAAA,OAAA;AAIA;EACAC,IAAA;EACAC,KAAA;IACA;MACAC,WAAA;MACAC,IAAA;MACAC,WAAA;MACAC,YAAA;MACAC,UAAA;MACAC,IAAA,EAAAC,IAAA,CAAAC,KAAA,CAAAC,YAAA,CAAAC,OAAA;MACAC,KAAA;QACAC,IAAA,GACA;UAAAC,QAAA;UAAAC,OAAA;UAAAC,OAAA;QAAA,EACA;QACAhB,IAAA,GACA;UAAAc,QAAA;UAAAC,OAAA;UAAAC,OAAA;QAAA,EACA;QACAC,IAAA,GACA;UAAAH,QAAA;UAAAC,OAAA;UAAAC,OAAA;QAAA;MAEA;IACA;EAEA;EACAE,QAAA;IACA,IAAAC,QAAA,GAAAC,QAAA,CAAAC,cAAA;IACA,KAAAC,OAAA,GAAAvB,OAAA,CAAAwB,IAAA,CAAAJ,QAAA;IACA,KAAAG,OAAA,CAAAE,SAAA,CAAAC,WAAA;EAEA;EACA;EACAC,OAAA;IACAC,aAAAC,GAAA;MACA,IAAAA,GAAA,CAAAC,IAAA;QAAA;QACA,KAAAC,QAAA,CAAAC,OAAA;QACAC,OAAA,CAAAC,GAAA,eAAAL,GAAA,CAAA3B,IAAA;QACA,KAAAK,UAAA,GAAAsB,GAAA,CAAA3B,IAAA;MACA;QACA,KAAA6B,QAAA,CAAAI,KAAA,CAAAN,GAAA,CAAAO,GAAA;MACA;IACA;IACAC,QAAAnC,IAAA;MACAA,IAAA,QAAAK,UAAA;MACA,KAAA+B,QAAA,CAAAC,IAAA,wCAAArC,IAAA;QACAI,YAAA,OAAAA;MACA,GAAAkC,IAAA,CAAAX,GAAA;QACA,IAAAA,GAAA,CAAAC,IAAA;UACA,KAAAC,QAAA,CAAAC,OAAA;UACAC,OAAA,CAAAC,GAAA,cAAAL,GAAA,CAAA3B,IAAA;QACA;UACA,KAAA6B,QAAA,CAAAI,KAAA,CAAAN,GAAA,CAAAO,GAAA;QACA;QACAH,OAAA,CAAAC,GAAA,CAAAL,GAAA,CAAA3B,IAAA;MACA,GAAAuC,KAAA,CAAAN,KAAA;QACAF,OAAA,CAAAE,KAAA,UAAAA,KAAA;QACA,KAAAJ,QAAA,CAAAI,KAAA;MACA;IACA;IAEAO,aAAA;MACA,SAAAtC,IAAA,CAAAc,IAAA,iBAAAd,IAAA,CAAAU,IAAA,iBAAAV,IAAA,CAAAH,IAAA;QACA,KAAAK,YAAA,SAAAF,IAAA,CAAAU,IAAA,OAAAV,IAAA,CAAAH,IAAA,OAAAG,IAAA,CAAAc,IAAA;QACA;QACA,KAAAmB,OAAA;MACA;QACA,KAAAN,QAAA,CAAAI,KAAA;MAEA;MACAF,OAAA,CAAAC,GAAA;MACAD,OAAA,CAAAC,GAAA,MAAA9B,IAAA,CAAAU,IAAA;MACAmB,OAAA,CAAAC,GAAA,MAAA9B,IAAA,CAAAH,IAAA;MACAgC,OAAA,CAAAC,GAAA,MAAA9B,IAAA,CAAAc,IAAA;MACAe,OAAA,CAAAC,GAAA;IAEA;IACAS,MAAA;MACA,KAAAvC,IAAA,CAAAU,IAAA;MACA,KAAAV,IAAA,CAAAH,IAAA;MACA,KAAAG,IAAA,CAAAc,IAAA;IACA;EACA;AACA"},"metadata":{},"sourceType":"module","externalDependencies":[]}