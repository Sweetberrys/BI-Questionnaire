{"ast":null,"code":"import * as echarts from 'echarts';\nexport default {\n  name: \"Chart\",\n  data() {\n    return {\n      pagesList: [],\n      tableData: [],\n      pageNum: 1,\n      pageSize: 4,\n      total: 0,\n      form: {},\n      backendData: '',\n      user: JSON.parse(localStorage.getItem('xm-user') || '{}')\n    };\n  },\n  mounted() {\n    // 初始化图表\n    this.initCharts();\n  },\n  methods: {\n    initCharts() {\n      this.pagesList.forEach(item => {\n        let chartDom = document.getElementById(\"aiOption-\" + item.id);\n        let myChart = echarts.init(chartDom);\n        myChart.setOption(JSON.parse(item.genResult));\n      });\n    },\n    load(pageNum) {\n      if (pageNum) this.pageNum = pageNum;\n      this.$request.get('/chart/selectPage', {\n        params: {\n          pageNum: this.pageNum,\n          pageSize: this.pageSize\n        }\n      }).then(res => {\n        this.tableData = res.data?.list;\n        this.total = res.data?.total;\n        this.backendData = res.data[0];\n        this.pagesList = this.tableData;\n        this.initCharts(); // 初始化图表\n      });\n    }\n  },\n\n  created() {\n    this.load(1);\n  }\n};","map":{"version":3,"names":["echarts","name","data","pagesList","tableData","pageNum","pageSize","total","form","backendData","user","JSON","parse","localStorage","getItem","mounted","initCharts","methods","forEach","item","chartDom","document","getElementById","id","myChart","init","setOption","genResult","load","$request","get","params","then","res","list","created"],"sources":["src/views/front/MyChart.vue"],"sourcesContent":["<template>\r\n    <div class=\"main-content\">\r\n        <el-row :gutter=\"10\">\r\n            <el-col shadow=\"hover\" :span=\"18\" v-for=\"item in pagesList\" :key=\"item.id\" style=\"margin-top:30px;margin-left: 160px\">\r\n                <div class=\"text\" style=\"width:38%;background-color:#fff;border-radius: 20px;\">\r\n                    <div class=\"text-title\" style=\"border-radius:3px;font-size:30px;margin:20px 2%;width: 95%;\">\r\n                        <strong>AI分析图表结论</strong>\r\n                        <div style=\"margin:20px 20px;word-wrap: break-word;font-size: 20px;\">{{ item.genResult }}</div>\r\n                    </div>\r\n                    <el-divider></el-divider>\r\n                    <div class=\"table-title\" style=\"width:100%;background-color:#fff;border-radius: 20px;\">\r\n                        <div class=\"box-title\" style=\"border-radius:3px;font-size:30px;margin:20px 2%;width: 95%;\">\r\n                            <strong>AI可视化图表</strong>\r\n                            <div style=\"margin-left: 40px;margin-top: 80px; display: flex; grid-gap: 10px\">\r\n                                <div style=\"flex: 1\">\r\n                                    <div style=\"height: 400px\" :id=\"'aiOption-' + item.id\"></div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </el-col>\r\n        </el-row>\r\n    </div>\r\n</template>\r\n\r\n<script>\r\nimport * as echarts from 'echarts'\r\n\r\nexport default {\r\n    name: \"Chart\",\r\n    data() {\r\n        return {\r\n            pagesList: [],\r\n            tableData: [],\r\n            pageNum: 1,\r\n            pageSize: 4,\r\n            total: 0,\r\n            form: {},\r\n            backendData: '',\r\n            user: JSON.parse(localStorage.getItem('xm-user') || '{}'),\r\n        }\r\n    },\r\n    mounted() {\r\n        // 初始化图表\r\n        this.initCharts();\r\n    },\r\n    methods: {\r\n        initCharts() {\r\n            this.pagesList.forEach(item => {\r\n                let chartDom = document.getElementById(\"aiOption-\" + item.id);\r\n                let myChart = echarts.init(chartDom);\r\n                myChart.setOption(JSON.parse(item.genResult));\r\n            });\r\n        },\r\n        load(pageNum) {\r\n            if (pageNum) this.pageNum = pageNum;\r\n            this.$request.get('/chart/selectPage', {\r\n                params: {\r\n                    pageNum: this.pageNum,\r\n                    pageSize: this.pageSize,\r\n                }\r\n            }).then(res => {\r\n                this.tableData = res.data?.list;\r\n                this.total = res.data?.total;\r\n                this.backendData = res.data[0];\r\n                this.pagesList = this.tableData;\r\n                this.initCharts(); // 初始化图表\r\n            });\r\n        }\r\n    },\r\n    created() {\r\n        this.load(1);\r\n    }\r\n}\r\n</script>\r\n\r\n<style>\r\nbody {\r\n    background-color: #dac9c9;\r\n}\r\n</style>\r\n"],"mappings":"AA2BA,YAAAA,OAAA;AAEA;EACAC,IAAA;EACAC,KAAA;IACA;MACAC,SAAA;MACAC,SAAA;MACAC,OAAA;MACAC,QAAA;MACAC,KAAA;MACAC,IAAA;MACAC,WAAA;MACAC,IAAA,EAAAC,IAAA,CAAAC,KAAA,CAAAC,YAAA,CAAAC,OAAA;IACA;EACA;EACAC,QAAA;IACA;IACA,KAAAC,UAAA;EACA;EACAC,OAAA;IACAD,WAAA;MACA,KAAAb,SAAA,CAAAe,OAAA,CAAAC,IAAA;QACA,IAAAC,QAAA,GAAAC,QAAA,CAAAC,cAAA,eAAAH,IAAA,CAAAI,EAAA;QACA,IAAAC,OAAA,GAAAxB,OAAA,CAAAyB,IAAA,CAAAL,QAAA;QACAI,OAAA,CAAAE,SAAA,CAAAf,IAAA,CAAAC,KAAA,CAAAO,IAAA,CAAAQ,SAAA;MACA;IACA;IACAC,KAAAvB,OAAA;MACA,IAAAA,OAAA,OAAAA,OAAA,GAAAA,OAAA;MACA,KAAAwB,QAAA,CAAAC,GAAA;QACAC,MAAA;UACA1B,OAAA,OAAAA,OAAA;UACAC,QAAA,OAAAA;QACA;MACA,GAAA0B,IAAA,CAAAC,GAAA;QACA,KAAA7B,SAAA,GAAA6B,GAAA,CAAA/B,IAAA,EAAAgC,IAAA;QACA,KAAA3B,KAAA,GAAA0B,GAAA,CAAA/B,IAAA,EAAAK,KAAA;QACA,KAAAE,WAAA,GAAAwB,GAAA,CAAA/B,IAAA;QACA,KAAAC,SAAA,QAAAC,SAAA;QACA,KAAAY,UAAA;MACA;IACA;EACA;;EACAmB,QAAA;IACA,KAAAP,IAAA;EACA;AACA"},"metadata":{},"sourceType":"module","externalDependencies":[]}