{"ast":null,"code":"import * as echarts from 'echarts';\nlet chartOption = {};\nexport default {\n  name: \"Chart\",\n  data() {\n    return {\n      pagesList: [],\n      tableData: [],\n      // 所有的数据\n      pageNum: 1,\n      // 当前的页码\n      pageSize: 4,\n      // 每页显示的个数\n      total: 0,\n      form: {},\n      backendData: '',\n      myChart: '',\n      chartOption: {},\n      // 新增chartOption属性\n      user: JSON.parse(localStorage.getItem('xm-user') || '{}')\n    };\n  },\n  mounted() {\n    this.load(1);\n  },\n  methods: {\n    load(pageNum) {\n      // 请求数据\n      this.$request.get('/chart/selectPage', {\n        params: {\n          pageNum: 1,\n          pageSize: this.pageSize\n        }\n      }).then(res => {\n        // 数据请求成功后\n        this.$nextTick(() => {\n          let chartDom = document.getElementById(\"aiOption\");\n          if (chartDom) {\n            this.myChart = echarts.init(chartDom);\n            this.chartOption = JSON.parse(res.data.genChart);\n            this.myChart.setOption(this.chartOption);\n          } else {\n            console.error(\"DOM 元素不存在\");\n          }\n        });\n      }).catch(error => {\n        console.error(\"数据请求失败:\", error);\n      });\n    }\n  }\n};","map":{"version":3,"names":["echarts","chartOption","name","data","pagesList","tableData","pageNum","pageSize","total","form","backendData","myChart","user","JSON","parse","localStorage","getItem","mounted","load","methods","$request","get","params","then","res","$nextTick","chartDom","document","getElementById","init","genChart","setOption","console","error","catch"],"sources":["src/views/front/MyChart.vue"],"sourcesContent":["<template>\r\n    <div class=\"main-content\">\r\n\r\n        <div style=\"display: flex;margin-left: 40%;margin-top:20px;margin-right: 2%;\">\r\n            <div class=\"title\" style=\"width:40%;height: 50%;font-size:30px;background-color: #fff;border-radius: 20px;\">\r\n                <div style=\"margin-top: 20px;margin-bottom: 20px;margin-left: 100px;\">\r\n                    <strong>AI智能分析</strong>\r\n                </div>\r\n\r\n            </div>\r\n        </div>\r\n        <el-row :gutter=\"10\">\r\n            <el-col shadow=\"hover\" :span=\"8\" v-for=\"item in pagesList\" :key=\"item.id\"\r\n                    style=\"margin-top:30px;margin-left: 4%;width:44%\">\r\n                <div class=\"text-title\"\r\n                     style=\"font-size:20px;margin:20px 2%;width: 100%;border: 12px solid red;height: 400px\">\r\n                    <strong>AI分析{{ item.name }}结论</strong>\r\n                    <div style=\"margin:20px 20px;word-wrap: break-word;font-size: 20px;\">{{ item.genResult }}</div>\r\n                </div>\r\n                <div class=\"table-title\" style=\"margin-left: 2%;width:100%;background-color:#fff;border-radius: 20px;\">\r\n                    <div class=\"box-title\" style=\"border-radius:3px;margin-left: 20px;font-size:20px;width: 95%;\">\r\n                        <strong>AI可视化图表</strong>\r\n                    </div>\r\n                    <div style=\"margin-left: 40px;margin-top: 20px; display: flex; grid-gap: 10px\">\r\n                        <div style=\"flex: 1\">\r\n                            <div style=\"height: 400px;font-size: 20px\" id=\"aiOption\">{{ item.genChart }}</div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n\r\n\r\n\r\n            </el-col>\r\n        </el-row>\r\n    </div>\r\n\r\n</template>\r\n\r\n<script>\r\nimport * as echarts from 'echarts'\r\n\r\nlet chartOption = {};\r\n\r\n\r\nexport default {\r\n    name: \"Chart\",\r\n    data() {\r\n        return {\r\n            pagesList: [],\r\n            tableData: [],  // 所有的数据\r\n            pageNum: 1,   // 当前的页码\r\n            pageSize: 4,  // 每页显示的个数\r\n            total: 0,\r\n            form: {},\r\n            backendData: '',\r\n            myChart: '',\r\n            chartOption: {},  // 新增chartOption属性\r\n            user: JSON.parse(localStorage.getItem('xm-user') || '{}'),\r\n        }\r\n\r\n    },\r\n    mounted() {\r\n        this.load(1);\r\n    },\r\n\r\n    methods: {\r\n        load(pageNum) {\r\n            // 请求数据\r\n            this.$request.get('/chart/selectPage', {\r\n                params: {\r\n                    pageNum: 1,\r\n                    pageSize: this.pageSize,\r\n                }\r\n            }).then(res => {\r\n                // 数据请求成功后\r\n                this.$nextTick(() => {\r\n                    let chartDom = document.getElementById(\"aiOption\");\r\n                    if (chartDom) {\r\n                        this.myChart = echarts.init(chartDom);\r\n                        this.chartOption = JSON.parse(res.data.genChart);\r\n                        this.myChart.setOption(this.chartOption);\r\n                    } else {\r\n                        console.error(\"DOM 元素不存在\");\r\n                    }\r\n                });\r\n            }).catch(error => {\r\n                console.error(\"数据请求失败:\", error);\r\n            });\r\n        }\r\n    }\r\n\r\n}\r\n\r\n</script>\r\n\r\n<style>\r\nbody {\r\n    background-color: #dac9c9;\r\n}\r\n</style>"],"mappings":"AAuCA,YAAAA,OAAA;AAEA,IAAAC,WAAA;AAGA;EACAC,IAAA;EACAC,KAAA;IACA;MACAC,SAAA;MACAC,SAAA;MAAA;MACAC,OAAA;MAAA;MACAC,QAAA;MAAA;MACAC,KAAA;MACAC,IAAA;MACAC,WAAA;MACAC,OAAA;MACAV,WAAA;MAAA;MACAW,IAAA,EAAAC,IAAA,CAAAC,KAAA,CAAAC,YAAA,CAAAC,OAAA;IACA;EAEA;EACAC,QAAA;IACA,KAAAC,IAAA;EACA;EAEAC,OAAA;IACAD,KAAAZ,OAAA;MACA;MACA,KAAAc,QAAA,CAAAC,GAAA;QACAC,MAAA;UACAhB,OAAA;UACAC,QAAA,OAAAA;QACA;MACA,GAAAgB,IAAA,CAAAC,GAAA;QACA;QACA,KAAAC,SAAA;UACA,IAAAC,QAAA,GAAAC,QAAA,CAAAC,cAAA;UACA,IAAAF,QAAA;YACA,KAAAf,OAAA,GAAAX,OAAA,CAAA6B,IAAA,CAAAH,QAAA;YACA,KAAAzB,WAAA,GAAAY,IAAA,CAAAC,KAAA,CAAAU,GAAA,CAAArB,IAAA,CAAA2B,QAAA;YACA,KAAAnB,OAAA,CAAAoB,SAAA,MAAA9B,WAAA;UACA;YACA+B,OAAA,CAAAC,KAAA;UACA;QACA;MACA,GAAAC,KAAA,CAAAD,KAAA;QACAD,OAAA,CAAAC,KAAA,YAAAA,KAAA;MACA;IACA;EACA;AAEA"},"metadata":{},"sourceType":"module","externalDependencies":[]}