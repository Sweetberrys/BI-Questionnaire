{"ast":null,"code":"export default {\n  name: \"Design\",\n  data() {\n    return {\n      pages: {},\n      questionList: []\n    };\n  },\n  created() {\n    this.load();\n  },\n  methods: {\n    handleSaved() {\n      this.$confirm(\"确认发布？\", '确认发布', {\n        type: \"warning\"\n      }).then(response => {});\n    },\n    validate() {\n      let flag = false; // 检查内容是否为空  当flag = true 的时候就是空的内容\n      for (let i = 0; i < this.questionList.length; i++) {\n        if (this.questionList[i].type === '单选题' || this.questionList[i].type === '多选题') {\n          if (!this.questionList[i].questionItemList?.length) {\n            this.$message.warning('单选题和多选题需要添加选项');\n            return false;\n          }\n          this.questionList[i].questionItemList.forEach(item => {\n            if (!item.content) {\n              flag = true;\n            }\n          });\n        }\n        if (!this.questionList[i].name) {\n          this.$message.warning('请填写题目名称');\n          return false;\n        }\n        if (flag) {\n          this.$message.warning('请完善选项内容');\n          return false;\n        }\n      }\n      //放行\n      return true;\n    },\n    viewPages(pageId) {\n      //校验通过\n      if (this.validate()) {\n        window.open('/front/viewPages?pageId=' + pageId);\n      }\n    },\n    addQuestion(type) {\n      this.$request.post('/question/addForUser', {\n        name: '',\n        type: type,\n        pageId: this.pages.id\n      }).then(res => {\n        if (res.code === '200') {\n          // 表示操作成功\n          this.$message.success('操作成功');\n          this.load();\n        } else {\n          this.$message.error(res.msg); // 弹出错误的信息\n        }\n      });\n    },\n\n    addQuestionItem(question) {\n      if (question.newContent != null) {\n        this.$request.post('/questionItem/add', {\n          questionId: question.id,\n          content: question.newContent\n        }).then(res => {\n          if (res.code === '200') {\n            // 表示操作成功\n            this.$message.success('操作成功');\n            this.load();\n          } else {\n            this.$message.error(res.msg); // 弹出错误的信息\n          }\n        });\n      } else {\n        this.$message.error('题目选项不得为空'); // 弹出错误的信息\n      }\n    },\n\n    changeQuestionName(question) {\n      let data = JSON.parse(JSON.stringify(question));\n      this.$request.put('question/update', data).then(res => {\n        if (res.code === '200') {\n          // 表示操作成功\n          this.$message.success('更新成功');\n          this.load(1);\n        } else {\n          this.$message.error(res.msg); // 弹出错误的信息\n        }\n      });\n    },\n\n    changeQuestionItem(questionItem) {\n      let data = JSON.parse(JSON.stringify(questionItem));\n      this.$request.put('questionItem/update', data).then(res => {\n        if (res.code === '200') {\n          // 表示操作成功\n          this.$message.success('更新成功');\n          this.load(1);\n        } else {\n          this.$message.error(res.msg); // 弹出错误的信息\n        }\n      });\n    },\n\n    delQuestion(questionId) {\n      // 单个删除\n      this.$confirm('您确定删除吗？', '确认删除', {\n        type: \"warning\"\n      }).then(response => {\n        this.$request.delete('/question/delete/' + questionId).then(res => {\n          if (res.code === '200') {\n            // 表示操作成功\n            this.$message.success('操作成功');\n            this.load();\n          } else {\n            this.$message.error(res.msg); // 弹出错误的信息\n          }\n        });\n      }).catch(() => {});\n    },\n    delQuestionItem(questionItemId) {\n      // 单个删除\n      this.$confirm('您确定删除吗？', '确认删除', {\n        type: \"warning\"\n      }).then(response => {\n        this.$request.delete('/questionItem/delete/' + questionItemId).then(res => {\n          if (res.code === '200') {\n            // 表示操作成功\n            this.$message.success('操作成功');\n            this.load();\n          } else {\n            this.$message.error(res.msg); // 弹出错误的信息\n          }\n        });\n      }).catch(() => {});\n    },\n    load() {\n      let pageId = this.$route.query.pageId;\n      this.$request.get('/pages/selectById/' + pageId).then(res => {\n        this.pages = res.data || {};\n      });\n      this.$request.get('/question/selectByPageId', {\n        params: {\n          pageId: pageId\n        }\n      }).then(res => {\n        this.questionList = res.data || [];\n      });\n    }\n  }\n};","map":{"version":3,"names":["name","data","pages","questionList","created","load","methods","handleSaved","$confirm","type","then","response","validate","flag","i","length","questionItemList","$message","warning","forEach","item","content","viewPages","pageId","window","open","addQuestion","$request","post","id","res","code","success","error","msg","addQuestionItem","question","newContent","questionId","changeQuestionName","JSON","parse","stringify","put","changeQuestionItem","questionItem","delQuestion","delete","catch","delQuestionItem","questionItemId","$route","query","get","params"],"sources":["src/views/front/Design.vue"],"sourcesContent":["<template>\r\n    <div class=\"main-content\">\r\n        <div class=\"card\" style=\"width: 60%;height:100%;margin:20px auto;background-color:#72767b;border-radius: 10px\">\r\n            <div style=\"display: flex; margin-bottom: 20px\">\r\n                <div style=\"flex: 1\">\r\n                    <div style=\"margin: 10px 10px\">\r\n                        <span style=\"font-size: 24px; margin-left:10px;\">{{ pages.name }}</span>\r\n                    </div>\r\n                </div>\r\n                <div style=\"margin: 10px 0px\">\r\n                    <el-tag style=\"margin:0px 10px\" v-if=\"pages.saved === '否'\">未发布</el-tag>\r\n                    <el-tag style=\"margin:0px 10px\" v-else type=\"success\">已发布</el-tag>\r\n                    <el-button type=\"success\"><i class=\"el-icon-top-right\"></i> 分享</el-button>\r\n                    <el-button type=\"warning\" @click=\"viewPages(pages.id)\"><i class=\"el-icon-s-claim\"></i> 预览\r\n                    </el-button>\r\n                    <el-button style=\"margin-right: 20px \" :disabled=\"pages.saved === '是'\" @click=\"handleSaved()\" type=\"info\"><i class=\"el-icon-check\"></i> 发布</el-button>\r\n\r\n                </div>\r\n            </div>\r\n\r\n            <div style=\"margin-left:20px;margin-bottom:20px;\">\r\n\r\n                <el-button style=\"margin-left: 10px\" type=\"warning\" @click=\"addQuestion('单选题')\">新建单选题\r\n                </el-button>\r\n                <el-button type=\"success\" @click=\"addQuestion('多选题')\">新建多选题</el-button>\r\n                <el-button type=\"info\" @click=\"addQuestion('填空题')\">新建填空题</el-button>\r\n            </div>\r\n\r\n            <div>\r\n                <div v-for=\"(item, index) in questionList\" :key=\"item.id\" style=\"margin-bottom: 20px\">\r\n                    <div style=\"\">\r\n                        <span style=\"font-weight: bold; margin-right: 5px;margin-left: 40px\">题目{{ index + 1 }}</span>\r\n                        <el-input v-model=\"item.name\" style=\"width: 70%; margin-right: 5px\"\r\n                                  @change=\"changeQuestionName(item)\"></el-input>\r\n                        <el-tag style=\"margin-right: 5px; color: #2a60c9\" v-if=\"item.type === '单选题'\">{{\r\n                            item.type\r\n                            }}\r\n                        </el-tag>\r\n                        <el-tag style=\"margin-right: 5px; color: orange\" v-if=\"item.type === '多选题'\">{{\r\n                            item.type\r\n                            }}\r\n                        </el-tag>\r\n                        <el-tag style=\"margin-right: 5px; color: seagreen\" v-if=\"item.type === '填空题'\">{{\r\n                            item.type\r\n                            }}\r\n                        </el-tag>\r\n                        <span style=\"color: #933939; cursor: pointer; font-size: 14px\" @click=\"delQuestion(item.id)\"><i\r\n                                class=\"el-icon-delete\" ></i><strong>删除</strong></span>\r\n                    </div>\r\n\r\n\r\n                    <div style=\"padding-left: 40px\" v-if=\"item.questionItemList?.length\">\r\n                        <div v-for=\"(sub, subIndex) in item.questionItemList\" :key=\"sub.id\" style=\"margin: 10px 0\">\r\n                            <div>\r\n                                <span style=\"margin-right: 5px;margin-left: 40px\">选项{{ subIndex + 1 }}</span>\r\n                                <el-input v-model=\"sub.content\" @change=\"changeQuestionItem(sub)\"\r\n                                          style=\"width: 50%;margin-left: 5px; margin-right: 5px\"></el-input>\r\n                                <span style=\"color: #933939FF; cursor: pointer; font-size: 14px\" @click=\"delQuestionItem(sub.id)\"><i\r\n                                        class=\"el-icon-delete\"\r\n                                        ></i><strong>删除</strong></span>\r\n                            </div>\r\n                        </div>\r\n                        <div>\r\n                            <span style=\"margin-right: 5px; color: #68e746;margin-left: 40px\">新选项</span>\r\n                            <el-input v-model=\"item.newContent\" style=\"width: 50%; margin-right: 5px\"></el-input>\r\n                            <el-button @click=\"addQuestionItem(item)\" style=\"margin-bottom: 20px\" type=\"success\"\r\n                                       class=\"btn-green\" size=\"mini\">\r\n                                确认添加\r\n                            </el-button>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n</template>\r\n\r\n<script>\r\nexport default {\r\n    name: \"Design\",\r\n    data() {\r\n        return {\r\n            pages: {},\r\n            questionList: []\r\n        }\r\n    },\r\n    created() {\r\n        this.load()\r\n    },\r\n    methods: {\r\n        handleSaved(){\r\n            this.$confirm(\"确认发布？\",'确认发布',{type:\"warning\"}).then(response=>{\r\n\r\n            })\r\n        },\r\n        validate() {\r\n            let flag = false  // 检查内容是否为空  当flag = true 的时候就是空的内容\r\n            for (let i = 0; i < this.questionList.length; i++) {\r\n                if (this.questionList[i].type === '单选题' || this.questionList[i].type === '多选题') {\r\n                    if (!this.questionList[i].questionItemList?.length) {\r\n                        this.$message.warning('单选题和多选题需要添加选项')\r\n                        return false\r\n                    }\r\n                    this.questionList[i].questionItemList.forEach(item => {\r\n                        if (!item.content) {\r\n                            flag = true\r\n                        }\r\n                    })\r\n                }\r\n                if (!this.questionList[i].name) {\r\n                    this.$message.warning('请填写题目名称')\r\n                    return false\r\n                }\r\n                if (flag) {\r\n                    this.$message.warning('请完善选项内容')\r\n                    return false\r\n                }\r\n            }\r\n            //放行\r\n            return true\r\n        },\r\n        viewPages(pageId) {\r\n            //校验通过\r\n           if(this.validate()){\r\n               window.open('/front/viewPages?pageId=' + pageId)\r\n           }\r\n        },\r\n        addQuestion(type) {\r\n            this.$request.post('/question/addForUser', {name: '', type: type, pageId: this.pages.id})\r\n                .then(res => {\r\n                    if (res.code === '200') {   // 表示操作成功\r\n                        this.$message.success('操作成功')\r\n                        this.load()\r\n                    } else {\r\n                        this.$message.error(res.msg)  // 弹出错误的信息\r\n                    }\r\n                })\r\n        },\r\n        addQuestionItem(question) {\r\n            if(question.newContent !=null){\r\n                this.$request.post('/questionItem/add', {questionId: question.id, content: question.newContent})\r\n                    .then(res => {\r\n                        if (res.code === '200') {   // 表示操作成功\r\n                            this.$message.success('操作成功')\r\n                            this.load()\r\n                        } else {\r\n                            this.$message.error(res.msg)  // 弹出错误的信息\r\n                        }\r\n                    })\r\n            }else {\r\n                this.$message.error('题目选项不得为空')  // 弹出错误的信息\r\n\r\n            }\r\n\r\n        },\r\n        changeQuestionName(question) {\r\n            let data = JSON.parse(JSON.stringify(question))\r\n            this.$request.put('question/update', data).then(res => {\r\n                if (res.code === '200') {   // 表示操作成功\r\n                    this.$message.success('更新成功')\r\n                    this.load(1)\r\n                } else {\r\n                    this.$message.error(res.msg)  // 弹出错误的信息\r\n                }\r\n            })\r\n        },\r\n        changeQuestionItem(questionItem) {\r\n            let data = JSON.parse(JSON.stringify(questionItem))\r\n            this.$request.put('questionItem/update', data).then(res => {\r\n                if (res.code === '200') {   // 表示操作成功\r\n                    this.$message.success('更新成功')\r\n                    this.load(1)\r\n                } else {\r\n                    this.$message.error(res.msg)  // 弹出错误的信息\r\n                }\r\n            })\r\n        },\r\n        delQuestion(questionId) {   // 单个删除\r\n            this.$confirm('您确定删除吗？', '确认删除', {type: \"warning\"}).then(response => {\r\n                this.$request.delete('/question/delete/' + questionId).then(res => {\r\n                    if (res.code === '200') {   // 表示操作成功\r\n                        this.$message.success('操作成功')\r\n                        this.load()\r\n                    } else {\r\n                        this.$message.error(res.msg)  // 弹出错误的信息\r\n                    }\r\n                })\r\n            }).catch(() => {\r\n            })\r\n        },\r\n        delQuestionItem(questionItemId) {   // 单个删除\r\n            this.$confirm('您确定删除吗？', '确认删除', {type: \"warning\"}).then(response => {\r\n                this.$request.delete('/questionItem/delete/' + questionItemId).then(res => {\r\n                    if (res.code === '200') {   // 表示操作成功\r\n                        this.$message.success('操作成功')\r\n                        this.load()\r\n                    } else {\r\n                        this.$message.error(res.msg)  // 弹出错误的信息\r\n                    }\r\n                })\r\n            }).catch(() => {\r\n            })\r\n        },\r\n        load() {\r\n            let pageId = this.$route.query.pageId\r\n            this.$request.get('/pages/selectById/' + pageId).then(res => {\r\n                this.pages = res.data || {}\r\n            })\r\n\r\n            this.$request.get('/question/selectByPageId', {\r\n                params: {\r\n                    pageId: pageId\r\n                }\r\n            }).then(res => {\r\n                this.questionList = res.data || []\r\n            })\r\n        }\r\n    }\r\n}\r\n</script>\r\n\r\n<style>\r\nbody {\r\n    background-color: rgb(218, 201, 201);\r\n}\r\n</style>"],"mappings":"AA8EA;EACAA,IAAA;EACAC,KAAA;IACA;MACAC,KAAA;MACAC,YAAA;IACA;EACA;EACAC,QAAA;IACA,KAAAC,IAAA;EACA;EACAC,OAAA;IACAC,YAAA;MACA,KAAAC,QAAA;QAAAC,IAAA;MAAA,GAAAC,IAAA,CAAAC,QAAA,KAEA;IACA;IACAC,SAAA;MACA,IAAAC,IAAA;MACA,SAAAC,CAAA,MAAAA,CAAA,QAAAX,YAAA,CAAAY,MAAA,EAAAD,CAAA;QACA,SAAAX,YAAA,CAAAW,CAAA,EAAAL,IAAA,mBAAAN,YAAA,CAAAW,CAAA,EAAAL,IAAA;UACA,UAAAN,YAAA,CAAAW,CAAA,EAAAE,gBAAA,EAAAD,MAAA;YACA,KAAAE,QAAA,CAAAC,OAAA;YACA;UACA;UACA,KAAAf,YAAA,CAAAW,CAAA,EAAAE,gBAAA,CAAAG,OAAA,CAAAC,IAAA;YACA,KAAAA,IAAA,CAAAC,OAAA;cACAR,IAAA;YACA;UACA;QACA;QACA,UAAAV,YAAA,CAAAW,CAAA,EAAAd,IAAA;UACA,KAAAiB,QAAA,CAAAC,OAAA;UACA;QACA;QACA,IAAAL,IAAA;UACA,KAAAI,QAAA,CAAAC,OAAA;UACA;QACA;MACA;MACA;MACA;IACA;IACAI,UAAAC,MAAA;MACA;MACA,SAAAX,QAAA;QACAY,MAAA,CAAAC,IAAA,8BAAAF,MAAA;MACA;IACA;IACAG,YAAAjB,IAAA;MACA,KAAAkB,QAAA,CAAAC,IAAA;QAAA5B,IAAA;QAAAS,IAAA,EAAAA,IAAA;QAAAc,MAAA,OAAArB,KAAA,CAAA2B;MAAA,GACAnB,IAAA,CAAAoB,GAAA;QACA,IAAAA,GAAA,CAAAC,IAAA;UAAA;UACA,KAAAd,QAAA,CAAAe,OAAA;UACA,KAAA3B,IAAA;QACA;UACA,KAAAY,QAAA,CAAAgB,KAAA,CAAAH,GAAA,CAAAI,GAAA;QACA;MACA;IACA;;IACAC,gBAAAC,QAAA;MACA,IAAAA,QAAA,CAAAC,UAAA;QACA,KAAAV,QAAA,CAAAC,IAAA;UAAAU,UAAA,EAAAF,QAAA,CAAAP,EAAA;UAAAR,OAAA,EAAAe,QAAA,CAAAC;QAAA,GACA3B,IAAA,CAAAoB,GAAA;UACA,IAAAA,GAAA,CAAAC,IAAA;YAAA;YACA,KAAAd,QAAA,CAAAe,OAAA;YACA,KAAA3B,IAAA;UACA;YACA,KAAAY,QAAA,CAAAgB,KAAA,CAAAH,GAAA,CAAAI,GAAA;UACA;QACA;MACA;QACA,KAAAjB,QAAA,CAAAgB,KAAA;MAEA;IAEA;;IACAM,mBAAAH,QAAA;MACA,IAAAnC,IAAA,GAAAuC,IAAA,CAAAC,KAAA,CAAAD,IAAA,CAAAE,SAAA,CAAAN,QAAA;MACA,KAAAT,QAAA,CAAAgB,GAAA,oBAAA1C,IAAA,EAAAS,IAAA,CAAAoB,GAAA;QACA,IAAAA,GAAA,CAAAC,IAAA;UAAA;UACA,KAAAd,QAAA,CAAAe,OAAA;UACA,KAAA3B,IAAA;QACA;UACA,KAAAY,QAAA,CAAAgB,KAAA,CAAAH,GAAA,CAAAI,GAAA;QACA;MACA;IACA;;IACAU,mBAAAC,YAAA;MACA,IAAA5C,IAAA,GAAAuC,IAAA,CAAAC,KAAA,CAAAD,IAAA,CAAAE,SAAA,CAAAG,YAAA;MACA,KAAAlB,QAAA,CAAAgB,GAAA,wBAAA1C,IAAA,EAAAS,IAAA,CAAAoB,GAAA;QACA,IAAAA,GAAA,CAAAC,IAAA;UAAA;UACA,KAAAd,QAAA,CAAAe,OAAA;UACA,KAAA3B,IAAA;QACA;UACA,KAAAY,QAAA,CAAAgB,KAAA,CAAAH,GAAA,CAAAI,GAAA;QACA;MACA;IACA;;IACAY,YAAAR,UAAA;MAAA;MACA,KAAA9B,QAAA;QAAAC,IAAA;MAAA,GAAAC,IAAA,CAAAC,QAAA;QACA,KAAAgB,QAAA,CAAAoB,MAAA,uBAAAT,UAAA,EAAA5B,IAAA,CAAAoB,GAAA;UACA,IAAAA,GAAA,CAAAC,IAAA;YAAA;YACA,KAAAd,QAAA,CAAAe,OAAA;YACA,KAAA3B,IAAA;UACA;YACA,KAAAY,QAAA,CAAAgB,KAAA,CAAAH,GAAA,CAAAI,GAAA;UACA;QACA;MACA,GAAAc,KAAA,QACA;IACA;IACAC,gBAAAC,cAAA;MAAA;MACA,KAAA1C,QAAA;QAAAC,IAAA;MAAA,GAAAC,IAAA,CAAAC,QAAA;QACA,KAAAgB,QAAA,CAAAoB,MAAA,2BAAAG,cAAA,EAAAxC,IAAA,CAAAoB,GAAA;UACA,IAAAA,GAAA,CAAAC,IAAA;YAAA;YACA,KAAAd,QAAA,CAAAe,OAAA;YACA,KAAA3B,IAAA;UACA;YACA,KAAAY,QAAA,CAAAgB,KAAA,CAAAH,GAAA,CAAAI,GAAA;UACA;QACA;MACA,GAAAc,KAAA,QACA;IACA;IACA3C,KAAA;MACA,IAAAkB,MAAA,QAAA4B,MAAA,CAAAC,KAAA,CAAA7B,MAAA;MACA,KAAAI,QAAA,CAAA0B,GAAA,wBAAA9B,MAAA,EAAAb,IAAA,CAAAoB,GAAA;QACA,KAAA5B,KAAA,GAAA4B,GAAA,CAAA7B,IAAA;MACA;MAEA,KAAA0B,QAAA,CAAA0B,GAAA;QACAC,MAAA;UACA/B,MAAA,EAAAA;QACA;MACA,GAAAb,IAAA,CAAAoB,GAAA;QACA,KAAA3B,YAAA,GAAA2B,GAAA,CAAA7B,IAAA;MACA;IACA;EACA;AACA"},"metadata":{},"sourceType":"module","externalDependencies":[]}