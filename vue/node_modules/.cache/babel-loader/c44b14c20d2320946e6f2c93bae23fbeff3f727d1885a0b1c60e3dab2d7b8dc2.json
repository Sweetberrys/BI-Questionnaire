{"ast":null,"code":"import * as echarts from 'echarts';\nexport default {\n  name: \"Chart\",\n  components: {\n    Echart: {\n      props: ['option'],\n      mounted() {\n        this.$nextTick(() => {\n          let chartDom = this.$el;\n          let myChart = echarts.init(chartDom);\n          myChart.setOption(this.option);\n        });\n      },\n      template: '<div style=\"width: 100%; height: 100%;\"></div>'\n    }\n  },\n  data() {\n    return {\n      pagesList: []\n      // ... 其他数据\n    };\n  },\n\n  mounted() {\n    this.load(1);\n  },\n  methods: {\n    load(pageNum) {\n      this.$request.get('/chart/selectPage', {\n        params: {\n          pageNum: pageNum,\n          pageSize: this.pageSize\n        }\n      }).then(res => {\n        this.pagesList = res.data.list; // 假设后端返回的数据结构是{list: [], total: 0}\n        this.total = res.data.total;\n      }).catch(error => {\n        console.error(\"数据请求失败:\", error);\n      });\n    }\n  }\n};","map":{"version":3,"names":["echarts","name","components","Echart","props","mounted","$nextTick","chartDom","$el","myChart","init","setOption","option","template","data","pagesList","load","methods","pageNum","$request","get","params","pageSize","then","res","list","total","catch","error","console"],"sources":["src/views/front/MyChart.vue"],"sourcesContent":["<template>\r\n    <div class=\"main-content\">\r\n        <!-- ... -->\r\n        <el-row :gutter=\"10\">\r\n            <el-col v-for=\"item in pagesList\" :key=\"item.id\" :span=\"8\" style=\"margin-top:30px;margin-left: 4%;\">\r\n                <div class=\"text-title\" style=\"font-size:20px;margin:20px 2%;width: 100%;height: 400px;\">\r\n                    <strong>AI分析{{ item.name }}结论</strong>\r\n                    <div style=\"margin:20px 20px;word-wrap: break-word;font-size: 20px;\">{{ item.genResult }}</div>\r\n                </div>\r\n                <div class=\"table-title\" style=\"margin-left: 2%;width:100%;background-color:#fff;border-radius: 20px;\">\r\n                    <div class=\"box-title\" style=\"border-radius:3px;margin-left: 20px;font-size:20px;width: 95%;\">\r\n                        <strong>AI可视化图表</strong>\r\n                    </div>\r\n                    <div style=\"margin-left: 40px;margin-top: 20px;\">\r\n                        <div style=\"height: 400px;\">\r\n                            <echart :option=\"item.genChart\"></echart>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </el-col>\r\n        </el-row>\r\n        <!-- ... -->\r\n    </div>\r\n</template>\r\n\r\n<script>\r\nimport * as echarts from 'echarts';\r\n\r\nexport default {\r\n    name: \"Chart\",\r\n    components: {\r\n        Echart: {\r\n            props: ['option'],\r\n            mounted() {\r\n                this.$nextTick(() => {\r\n                    let chartDom = this.$el;\r\n                    let myChart = echarts.init(chartDom);\r\n                    myChart.setOption(this.option);\r\n                });\r\n            },\r\n            template: '<div style=\"width: 100%; height: 100%;\"></div>'\r\n        }\r\n    },\r\n    data() {\r\n        return {\r\n            pagesList: [],\r\n            // ... 其他数据\r\n        }\r\n    },\r\n    mounted() {\r\n        this.load(1);\r\n    },\r\n    methods: {\r\n        load(pageNum) {\r\n            this.$request.get('/chart/selectPage', {\r\n                params: {\r\n                    pageNum: pageNum,\r\n                    pageSize: this.pageSize,\r\n                }\r\n            }).then(res => {\r\n                this.pagesList = res.data.list; // 假设后端返回的数据结构是{list: [], total: 0}\r\n                this.total = res.data.total;\r\n            }).catch(error => {\r\n                console.error(\"数据请求失败:\", error);\r\n            });\r\n        }\r\n    }\r\n}\r\n</script>\r\n\r\n<style>\r\n/* ... */\r\n</style>\r\n"],"mappings":"AA0BA,YAAAA,OAAA;AAEA;EACAC,IAAA;EACAC,UAAA;IACAC,MAAA;MACAC,KAAA;MACAC,QAAA;QACA,KAAAC,SAAA;UACA,IAAAC,QAAA,QAAAC,GAAA;UACA,IAAAC,OAAA,GAAAT,OAAA,CAAAU,IAAA,CAAAH,QAAA;UACAE,OAAA,CAAAE,SAAA,MAAAC,MAAA;QACA;MACA;MACAC,QAAA;IACA;EACA;EACAC,KAAA;IACA;MACAC,SAAA;MACA;IACA;EACA;;EACAV,QAAA;IACA,KAAAW,IAAA;EACA;EACAC,OAAA;IACAD,KAAAE,OAAA;MACA,KAAAC,QAAA,CAAAC,GAAA;QACAC,MAAA;UACAH,OAAA,EAAAA,OAAA;UACAI,QAAA,OAAAA;QACA;MACA,GAAAC,IAAA,CAAAC,GAAA;QACA,KAAAT,SAAA,GAAAS,GAAA,CAAAV,IAAA,CAAAW,IAAA;QACA,KAAAC,KAAA,GAAAF,GAAA,CAAAV,IAAA,CAAAY,KAAA;MACA,GAAAC,KAAA,CAAAC,KAAA;QACAC,OAAA,CAAAD,KAAA,YAAAA,KAAA;MACA;IACA;EACA;AACA"},"metadata":{},"sourceType":"module","externalDependencies":[]}