{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nexport default {\n  name: \"RealPage\",\n  data() {\n    return {\n      pages: {},\n      questionList: []\n    };\n  },\n  created() {\n    this.load();\n  },\n  methods: {\n    //提交数据\n    submitAnswer() {\n      for (let i = 0; i < this.questionList.length; i++) {\n        if (!this.questionList[i].answer) {\n          this.$message.warning('请填写完所有题目再提交');\n          return;\n        }\n      }\n      let no = new Date().getTime();\n      let answerList = [];\n      this.questionList.forEach(item => {\n        let content = item.answer;\n        if (item.type === '多选题') {\n          content = JSON.stringify(content); // 把数组转换成字符串存到数据库\n        }\n\n        answerList.push({\n          questionId: item.id,\n          content: content,\n          pageId: item.pageId,\n          no: no + ''\n        });\n      });\n      this.$request.post('/answer/addBatch', answerList).then(res => {\n        if (res.code === '200') {\n          // 表示成功保存\n          this.$message.success('提交成功');\n          setTimeout(() => {\n            location.href = '/thanks';\n          }, 500);\n        } else {\n          this.$message.error(res.msg); // 弹出错误的信息\n        }\n      });\n    },\n\n    load() {\n      let pageId = this.$route.query.pageId;\n      this.$request.get('/pages/selectById/' + pageId).then(res => {\n        this.pages = res.data || {};\n      });\n      this.$request.get('/question/selectByPageId', {\n        params: {\n          pageId: pageId\n        }\n      }).then(res => {\n        this.questionList = res.data || [];\n\n        //解决多选时，值为true/false\n        this.questionList.forEach(item => {\n          if (item.type === '多选题') {\n            this.$set(item, 'answer', []);\n          } else {\n            this.$set(item, 'answer', '');\n          }\n        });\n      });\n    }\n  }\n};","map":{"version":3,"names":["name","data","pages","questionList","created","load","methods","submitAnswer","i","length","answer","$message","warning","no","Date","getTime","answerList","forEach","item","content","type","JSON","stringify","push","questionId","id","pageId","$request","post","then","res","code","success","setTimeout","location","href","error","msg","$route","query","get","params","$set"],"sources":["src/views/front/RealPage.vue"],"sourcesContent":["<template>\r\n    <div class=\"main-content\">\r\n        <div class=\"card\" style=\"width: 70%;height:100%;margin:20px auto;background-color:#72767b;border-radius: 20px\">\r\n            <div style=\"text-align: center;color:#2d2929;font-weight:bold;font-size:35px;width:50%;margin:20px auto;border-bottom: 3px solid #2d2929\">\r\n                {{ pages.name }}\r\n            </div>\r\n\r\n            <div style=\"padding: 10px 0\">\r\n                <div v-for=\"(item, index) in questionList\" :key=\"item.id\" style=\"margin-bottom: 15px\">\r\n                    <div style=\"text-align: left;color:#2d2929;font-weight:bold;font-size:20px;width:50%;margin:20px auto;\">\r\n                        <span>{{ index + 1 }}、</span>\r\n                        <span style=\"margin-right: 10px\">{{ item.name }}</span>\r\n                        <el-tag v-if=\"item.type === '单选题'\" type=\"primary\">(单选)</el-tag>\r\n                        <el-tag v-if=\"item.type === '多选题'\" type=\"success\">(多选)</el-tag>\r\n                        <el-tag v-if=\"item.type === '填空题'\" type=\"warning\">(填空)</el-tag>\r\n                    </div>\r\n                    <!--遍历内容-->\r\n                    <div style=\"text-align: left;width:50%;margin:20px auto;border-bottom: 1px solid #2d2929;\">\r\n\r\n                        <!--选择题有内容-->\r\n                        <div style=\"text-align: left;color:#2d2929;padding-left:20px;margin:20px auto;\"\r\n                             v-for=\"sub in item.questionItemList\" :key=\"sub.id\">\r\n                            <div v-if=\"item.type === '单选题'\">\r\n                                <el-radio :label=\"sub.content\" v-model=\"item.answer\" style=\"color: #2d2929;\"\r\n                                          border></el-radio>\r\n                            </div>\r\n                        </div>\r\n                        <el-checkbox-group v-model=\"item.answer\" v-if=\"item.type === '多选题'\">\r\n                            <div style=\"text-align: left;color:#2d2929;padding-left:20px;margin:20px auto;\"\r\n                                 v-for=\"sub in item.questionItemList\" :key=\"sub.id\">\r\n                                <el-checkbox :label=\"sub.content\" style=\"color: #2d2929;\" border></el-checkbox>\r\n                            </div>\r\n                        </el-checkbox-group>\r\n\r\n                        <div v-if=\"item.type === '填空题'\">\r\n                            <el-input type=\"textarea\" v-model=\"item.answer\"></el-input>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n\r\n                <!--  关闭按钮  -->\r\n                <div style=\"text-align: center\">\r\n                    <el-button size=\"medium\" type=\"primary\" @click=\"submitAnswer\">提 交</el-button>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n</template>\r\n\r\n<script>\r\nexport default {\r\n    name: \"RealPage\",\r\n    data() {\r\n        return {\r\n            pages: {},\r\n            questionList: [],\r\n        }\r\n    },\r\n    created() {\r\n        this.load()\r\n    },\r\n    methods: {\r\n        //提交数据\r\n        submitAnswer() {\r\n            for (let i = 0; i < this.questionList.length; i++) {\r\n                if (!this.questionList[i].answer) {\r\n                    this.$message.warning('请填写完所有题目再提交')\r\n                    return\r\n                }\r\n            }\r\n            let no = new Date().getTime()\r\n            let answerList = []\r\n            this.questionList.forEach(item => {\r\n                let content = item.answer\r\n                if (item.type === '多选题') {\r\n                    content = JSON.stringify(content)   // 把数组转换成字符串存到数据库\r\n                }\r\n                answerList.push({ questionId: item.id, content: content, pageId: item.pageId, no: no+''})\r\n            })\r\n            this.$request.post('/answer/addBatch', answerList).then(res => {\r\n                if (res.code === '200') {  // 表示成功保存\r\n                    this.$message.success('提交成功')\r\n                    setTimeout(() => {\r\n                        location.href = '/thanks'\r\n                    }, 500)\r\n                } else {\r\n                    this.$message.error(res.msg)  // 弹出错误的信息\r\n                }\r\n            })\r\n        },\r\n        load() {\r\n            let pageId = this.$route.query.pageId\r\n            this.$request.get('/pages/selectById/' + pageId).then(res => {\r\n                this.pages = res.data || {}\r\n            })\r\n\r\n            this.$request.get('/question/selectByPageId', {\r\n                params: {\r\n                    pageId: pageId\r\n                }\r\n            }).then(res => {\r\n                this.questionList = res.data || []\r\n\r\n                //解决多选时，值为true/false\r\n                this.questionList.forEach(item => {\r\n                    if (item.type === '多选题') {\r\n                        this.$set(item, 'answer', [])\r\n                    } else {\r\n                        this.$set(item, 'answer', '')\r\n                    }\r\n                })\r\n            })\r\n        }\r\n\r\n    }\r\n}\r\n</script>\r\n\r\n<style scoped>\r\n\r\n</style>\r\n<style>\r\n\r\nbody {\r\n    background-color: #dac9c9;\r\n}\r\n\r\n</style>"],"mappings":";AAkDA;EACAA,IAAA;EACAC,KAAA;IACA;MACAC,KAAA;MACAC,YAAA;IACA;EACA;EACAC,QAAA;IACA,KAAAC,IAAA;EACA;EACAC,OAAA;IACA;IACAC,aAAA;MACA,SAAAC,CAAA,MAAAA,CAAA,QAAAL,YAAA,CAAAM,MAAA,EAAAD,CAAA;QACA,UAAAL,YAAA,CAAAK,CAAA,EAAAE,MAAA;UACA,KAAAC,QAAA,CAAAC,OAAA;UACA;QACA;MACA;MACA,IAAAC,EAAA,OAAAC,IAAA,GAAAC,OAAA;MACA,IAAAC,UAAA;MACA,KAAAb,YAAA,CAAAc,OAAA,CAAAC,IAAA;QACA,IAAAC,OAAA,GAAAD,IAAA,CAAAR,MAAA;QACA,IAAAQ,IAAA,CAAAE,IAAA;UACAD,OAAA,GAAAE,IAAA,CAAAC,SAAA,CAAAH,OAAA;QACA;;QACAH,UAAA,CAAAO,IAAA;UAAAC,UAAA,EAAAN,IAAA,CAAAO,EAAA;UAAAN,OAAA,EAAAA,OAAA;UAAAO,MAAA,EAAAR,IAAA,CAAAQ,MAAA;UAAAb,EAAA,EAAAA,EAAA;QAAA;MACA;MACA,KAAAc,QAAA,CAAAC,IAAA,qBAAAZ,UAAA,EAAAa,IAAA,CAAAC,GAAA;QACA,IAAAA,GAAA,CAAAC,IAAA;UAAA;UACA,KAAApB,QAAA,CAAAqB,OAAA;UACAC,UAAA;YACAC,QAAA,CAAAC,IAAA;UACA;QACA;UACA,KAAAxB,QAAA,CAAAyB,KAAA,CAAAN,GAAA,CAAAO,GAAA;QACA;MACA;IACA;;IACAhC,KAAA;MACA,IAAAqB,MAAA,QAAAY,MAAA,CAAAC,KAAA,CAAAb,MAAA;MACA,KAAAC,QAAA,CAAAa,GAAA,wBAAAd,MAAA,EAAAG,IAAA,CAAAC,GAAA;QACA,KAAA5B,KAAA,GAAA4B,GAAA,CAAA7B,IAAA;MACA;MAEA,KAAA0B,QAAA,CAAAa,GAAA;QACAC,MAAA;UACAf,MAAA,EAAAA;QACA;MACA,GAAAG,IAAA,CAAAC,GAAA;QACA,KAAA3B,YAAA,GAAA2B,GAAA,CAAA7B,IAAA;;QAEA;QACA,KAAAE,YAAA,CAAAc,OAAA,CAAAC,IAAA;UACA,IAAAA,IAAA,CAAAE,IAAA;YACA,KAAAsB,IAAA,CAAAxB,IAAA;UACA;YACA,KAAAwB,IAAA,CAAAxB,IAAA;UACA;QACA;MACA;IACA;EAEA;AACA"},"metadata":{},"sourceType":"module","externalDependencies":[]}